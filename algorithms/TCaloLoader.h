// Author: Remco de Boer
// Date: June 6th, 2018
// For NIKHEF Project 2018

/* === CLASS DESCRIPTION =======
	This algorithm reads the data file that is generated by the calorimeter. This data file is just a long text file that defines an arbitrary number of "calo events" that each contain 1024 values. These values have to be integrated to obtain the cumulative energy detected by the calorimeter in an event.
*/

#ifndef TCALOLOADER_T
#define TCALOLOADER_T 1

// === INCLUDES =======
	#include <fstream>
	#include "TAlgorithm.h"
	#include "TCaloEvent.h"
	#include "TH1I.h"

// === CLASS DEFINITION =======
class TCaloLoader : public TAlgorithm {

public:
	// Constructors and destructors
	// has writing operation, so writing bit set to false
	TCaloLoader(TClipboard* cp)
		: TAlgorithm(cp,"TCaloLoader",true) {}
	TCaloLoader(TClipboard* cp, Bool_t debug)
		: TAlgorithm(cp,"TCaloLoader",true,debug) {}
	~TCaloLoader() {}

	// Algorithm step functions
	void Initialise();
	StatusCode Run();
	void Finalise();

	// Write functions
	void WriteHistograms();

private:
	// Private functions
	UInt_t DetermineNEvents();
	Bool_t LoadCaloEvent();
	// Data members
	std::ifstream fFileStream;
	TCaloEvent* fCaloEvent;
	TH1I* fEnergySpectrumFit;
	TH1I* fEnergySpectrumSum;
	// Read dump
	UShort_t fNCaloPoints;
	UInt_t fEventNumber;
	ULong64_t fTimestamp;
	Short_t fValue;

};

#endif // TTIMEPIXEVENTLOADER_H